import{_ as o,c as t,a as l,b as s,d as a,e,o as p,r}from"./404.md.4a8d5652.js";const k=JSON.parse('{"title":"Block Materials","description":"","frontmatter":{"title":"Block Materials","category":"Documentation","tags":["experimental"],"mentions":["SirLich","yanasakana","MedicalJewel105"]},"headers":[{"level":2,"title":"Application","slug":"application","link":"#application","children":[]},{"level":2,"title":"Block Materials","slug":"block-materials","link":"#block-materials","children":[]}],"relativePath":"blocks/block-materials.md"}'),c={name:"blocks/block-materials.md"},i=s("h2",{id:"application",tabindex:"-1"},[a("Application "),s("a",{class:"header-anchor",href:"#application","aria-hidden":"true"},"#")],-1),D=s("p",null,[a("Block materials essentially control how a block is rendered in the world, much like entity materials. They can be applied with the block component, "),s("code",null,"material_instances"),a(", with the optional parameter, "),s("code",null,"render_method"),a(". Using this would look something like the below example, a non-full block:")],-1),F=e("",4),y=e("",1);function d(u,b,C,m,h,A){const n=r("CodeHeader");return p(),t("div",null,[i,D,l(n),F,l(n),y])}const f=o(c,[["render",d]]);export{k as __pageData,f as default};
